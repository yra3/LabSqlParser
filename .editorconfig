# https://aka.ms/editorconfigdocs
root = true

[*]
end_of_line = lf
charset = utf-8
trim_trailing_whitespace = true
insert_final_newline = true
indent_style = tab

[*.dbs]
insert_final_newline = false

[*.sln]
charset = utf-8-bom
end_of_line = crlf

[{*.csproj,*.props,*.targets}]
indent_style = space
indent_size = 2

[*.cs]
# poorly documented rules:
# - https://github.com/dotnet/docs/issues/28791
# - https://github.com/dotnet/docs/issues/30361
# - https://github.com/dotnet/roslyn/blob/e59309f35553d53147088c01c5b7706d1e8cdec2/src/Features/RulesMissingDocumentation.md
# - https://github.com/dotnet/roslyn/blob/e59309f35553d53147088c01c5b7706d1e8cdec2/src/VisualStudio/Core/Def/CodeCleanup/readme.md
# - https://github.com/RehanSaeed/EditorConfig/issues/60
# some rules are from `analysislevel_7_all.editorconfig` and `analysislevelstyle_all.editorconfig`

csharp_indent_block_contents = true # related: IDE0055
csharp_indent_braces = false # related: IDE0055
csharp_indent_case_contents = true # related: IDE0055
csharp_indent_case_contents_when_block = true # related: IDE0055
csharp_indent_labels = flush_left # related: IDE0055
csharp_indent_switch_labels = true # related: IDE0055
csharp_new_line_before_catch = true # related: IDE0055
csharp_new_line_before_else = true # related: IDE0055
csharp_new_line_before_finally = true # related: IDE0055
csharp_new_line_before_members_in_anonymous_types = true # related: IDE0055
csharp_new_line_before_members_in_object_initializers = true # related: IDE0055
csharp_new_line_before_open_brace = none # related: IDE0055
csharp_new_line_between_query_expression_clauses = true # related: IDE0055
csharp_prefer_braces = true # related: IDE0011
csharp_prefer_simple_default_expression = true # related: IDE0034
csharp_prefer_simple_using_statement = true # related: IDE0063
csharp_prefer_static_local_function = true # related: IDE0062
csharp_preferred_modifier_order = public,private,protected,internal,static,extern,new,virtual,abstract,sealed,override,readonly,unsafe,volatile,async # related: IDE0036
csharp_preserve_single_line_blocks = true # related: IDE0055
csharp_preserve_single_line_statements = false # related: IDE0055
csharp_space_after_cast = false # related: IDE0055
csharp_space_after_colon_in_inheritance_clause = true # related: IDE0055
csharp_space_after_comma = true # related: IDE0055
csharp_space_after_dot = false # related: IDE0055
csharp_space_after_keywords_in_control_flow_statements = true # related: IDE0055
csharp_space_after_semicolon_in_for_statement = true # related: IDE0055
csharp_space_around_binary_operators = before_and_after # related: IDE0055
csharp_space_around_declaration_statements = false # related: IDE0055
csharp_space_before_colon_in_inheritance_clause = true # related: IDE0055
csharp_space_before_comma = false # related: IDE0055
csharp_space_before_dot = false # related: IDE0055
csharp_space_before_open_square_brackets = false # related: IDE0055
csharp_space_before_semicolon_in_for_statement = false # related: IDE0055
csharp_space_between_empty_square_brackets = false # related: IDE0055
csharp_space_between_method_call_empty_parameter_list_parentheses = false # related: IDE0055
csharp_space_between_method_call_name_and_opening_parenthesis = false # related: IDE0055
csharp_space_between_method_call_parameter_list_parentheses = false # related: IDE0055
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false # related: IDE0055
csharp_space_between_method_declaration_name_and_open_parenthesis = false # related: IDE0055
csharp_space_between_method_declaration_parameter_list_parentheses = false # related: IDE0055
csharp_space_between_parentheses = false # related: IDE0055
csharp_space_between_square_brackets = false # related: IDE0055
csharp_style_allow_blank_line_after_colon_in_constructor_initializer_experimental = false # related: IDE2004
csharp_style_allow_blank_lines_between_consecutive_braces_experimental = false # related: IDE2002
csharp_style_allow_embedded_statements_on_same_line_experimental = true # related: IDE2001
csharp_style_conditional_delegate_call = true # related: IDE1005
csharp_style_deconstructed_variable_declaration = true # related: IDE0042
csharp_style_expression_bodied_accessors = when_on_single_line # related: IDE0027
csharp_style_expression_bodied_constructors = false # related: IDE0021
csharp_style_expression_bodied_indexers = when_on_single_line # related: IDE0026
csharp_style_expression_bodied_lambdas = when_on_single_line # related: IDE0053
csharp_style_expression_bodied_local_functions = false # related: IDE0061
csharp_style_expression_bodied_methods = false # related: IDE0022
csharp_style_expression_bodied_operators = when_on_single_line # related: IDE0023, IDE0024
csharp_style_expression_bodied_properties = when_on_single_line # related: IDE0025
csharp_style_implicit_object_creation_when_type_is_apparent = true # related: IDE0090
csharp_style_inlined_variable_declaration = true # related: IDE0018
csharp_style_namespace_declarations = file_scoped # related: IDE0160, IDE0161
csharp_style_pattern_matching_over_as_with_null_check = true # related: IDE0019
csharp_style_pattern_matching_over_is_with_cast_check = true # related: IDE0020, IDE0038
csharp_style_prefer_extended_property_pattern = true # related: IDE0170
csharp_style_prefer_index_operator = true # related: IDE0056
csharp_style_prefer_local_over_anonymous_function = true # related: IDE0039
csharp_style_prefer_method_group_conversion = true # related: IDE0200
csharp_style_prefer_not_pattern = false # related: IDE0083
csharp_style_prefer_null_check_over_type_check = true # related: IDE0150
csharp_style_prefer_pattern_matching = false # related: IDE0078
csharp_style_prefer_range_operator = true # related: IDE0057
csharp_style_prefer_switch_expression = true # related: IDE0066
csharp_style_prefer_top_level_statements = false # related: IDE0210, IDE0211
csharp_style_prefer_tuple_swap = true # related: IDE0180
csharp_style_prefer_utf8_string_literals = true # related: IDE0230
csharp_style_throw_expression = true # related: IDE0016
csharp_style_unused_value_assignment_preference = discard_variable # related: IDE0059
csharp_style_unused_value_expression_statement_preference = discard_variable # related: IDE0058
csharp_style_var_elsewhere = true # related: IDE0007, IDE0008
csharp_style_var_for_built_in_types = true # related: IDE0007, IDE0008
csharp_style_var_when_type_is_apparent = true # related: IDE0007, IDE0008
csharp_using_directive_placement = outside_namespace # related: IDE0065
dotnet_code_quality_unused_parameters = all # related: IDE0060
dotnet_diagnostic.CA1000.severity = warning # Do not declare static members on generic types
dotnet_diagnostic.CA1001.severity = warning # Types that own disposable fields should be disposable
dotnet_diagnostic.CA1002.severity = silent # Do not expose generic lists
dotnet_diagnostic.CA1003.severity = warning # Use generic event handler instances
dotnet_diagnostic.CA1008.severity = silent # Enums should have zero value
dotnet_diagnostic.CA1010.severity = silent # Generic interface should also be implemented
dotnet_diagnostic.CA1012.severity = warning # Abstract types should not have public constructors
dotnet_diagnostic.CA1016.severity = warning # Mark assemblies with assembly version
dotnet_diagnostic.CA1018.severity = warning # Mark attributes with AttributeUsageAttribute
dotnet_diagnostic.CA1019.severity = warning # Define accessors for attribute arguments
dotnet_diagnostic.CA1024.severity = warning # Use properties where appropriate
dotnet_diagnostic.CA1027.severity = warning # Mark enums with FlagsAttribute
dotnet_diagnostic.CA1028.severity = silent # Enum Storage should be Int32 # maybe useful
dotnet_diagnostic.CA1030.severity = warning # Use events where appropriate
dotnet_diagnostic.CA1031.severity = warning # Do not catch general exception types
dotnet_diagnostic.CA1032.severity = silent # Implement standard exception constructors
dotnet_diagnostic.CA1033.severity = warning # Interface methods should be callable by child types
dotnet_diagnostic.CA1034.severity = silent # Nested types should not be visible
dotnet_diagnostic.CA1036.severity = warning # Override methods on comparable types
dotnet_diagnostic.CA1040.severity = silent # Avoid empty interfaces
dotnet_diagnostic.CA1041.severity = warning # Provide ObsoleteAttribute message
dotnet_diagnostic.CA1043.severity = warning # Use Integral Or String Argument For Indexers
dotnet_diagnostic.CA1044.severity = warning # Properties should not be write only
dotnet_diagnostic.CA1046.severity = warning # Do not overload equality operator on reference types
dotnet_diagnostic.CA1047.severity = warning # Do not declare protected member in sealed type
dotnet_diagnostic.CA1050.severity = warning # Declare types in namespaces
dotnet_diagnostic.CA1051.severity = warning # Do not declare visible instance fields
dotnet_diagnostic.CA1052.severity = warning # Static holder types should be Static or NotInheritable
dotnet_diagnostic.CA1054.severity = silent # URI-like parameters should not be strings
dotnet_diagnostic.CA1055.severity = warning # URI-like return values should not be strings
dotnet_diagnostic.CA1056.severity = warning # URI-like properties should not be strings
dotnet_diagnostic.CA1058.severity = warning # Types should not extend certain base types
dotnet_diagnostic.CA1061.severity = warning # Do not hide base class methods
dotnet_diagnostic.CA1062.severity = silent # Validate arguments of public methods
dotnet_diagnostic.CA1063.severity = warning # Implement IDisposable Correctly
dotnet_diagnostic.CA1064.severity = silent # Exceptions should be public
dotnet_diagnostic.CA1065.severity = warning # Do not raise exceptions in unexpected locations
dotnet_diagnostic.CA1066.severity = warning # Implement IEquatable when overriding Object.Equals
dotnet_diagnostic.CA1067.severity = warning # Override Object.Equals(object) when implementing IEquatable<T>
dotnet_diagnostic.CA1068.severity = warning # CancellationToken parameters must come last
dotnet_diagnostic.CA1069.severity = warning # Enums values should not be duplicated
dotnet_diagnostic.CA1070.severity = warning # Do not declare event fields as virtual
dotnet_diagnostic.CA1200.severity = warning # Avoid using cref tags with a prefix
dotnet_diagnostic.CA1303.severity = none # Do not pass literals as localized parameters
dotnet_diagnostic.CA1304.severity = warning # Specify CultureInfo
dotnet_diagnostic.CA1305.severity = warning # Specify IFormatProvider
dotnet_diagnostic.CA1307.severity = silent # Specify StringComparison for clarity
dotnet_diagnostic.CA1308.severity = silent # Normalize strings to uppercase
dotnet_diagnostic.CA1309.severity = warning # Use ordinal string comparison
dotnet_diagnostic.CA1310.severity = warning # Specify StringComparison for correctness
dotnet_diagnostic.CA1311.severity = warning # Specify a culture or use an invariant version
dotnet_diagnostic.CA1401.severity = warning # P/Invokes should not be visible
dotnet_diagnostic.CA1419.severity = warning # Provide a parameterless constructor that is as visible as the containing type for concrete types derived from 'System.Runtime.InteropServices.SafeHandle'
dotnet_diagnostic.CA1421.severity = warning # This method uses runtime marshalling even when the 'DisableRuntimeMarshallingAttribute' is applied
dotnet_diagnostic.CA1507.severity = warning # Use nameof to express symbol names
dotnet_diagnostic.CA1508.severity = silent # Avoid dead conditional code # useful
dotnet_diagnostic.CA1700.severity = warning # Do not name enum values 'Reserved'
dotnet_diagnostic.CA1707.severity = warning # Identifiers should not contain underscores
dotnet_diagnostic.CA1708.severity = warning # Identifiers should differ by more than case
dotnet_diagnostic.CA1710.severity = silent # Identifiers should have correct suffix
dotnet_diagnostic.CA1711.severity = silent # Identifiers should not have incorrect suffix # maybe useful
dotnet_diagnostic.CA1712.severity = warning # Do not prefix enum values with type name
dotnet_diagnostic.CA1713.severity = warning # Events should not have 'Before' or 'After' prefix
dotnet_diagnostic.CA1715.severity = warning # Identifiers should have correct prefix
dotnet_diagnostic.CA1716.severity = warning # Identifiers should not match keywords
dotnet_diagnostic.CA1720.severity = warning # Identifier contains type name
dotnet_diagnostic.CA1721.severity = silent # Property names should not match get methods
dotnet_diagnostic.CA1724.severity = warning # Type names should not match namespaces
dotnet_diagnostic.CA1725.severity = warning # Parameter names should match base declaration
dotnet_diagnostic.CA1727.severity = warning # Use PascalCase for named placeholders
dotnet_diagnostic.CA1802.severity = silent # Use literals where appropriate
dotnet_diagnostic.CA1805.severity = warning # Do not initialize unnecessarily
dotnet_diagnostic.CA1806.severity = warning # Do not ignore method results
dotnet_diagnostic.CA1810.severity = warning # Initialize reference type static fields inline
dotnet_diagnostic.CA1812.severity = warning # Avoid uninstantiated internal classes
dotnet_diagnostic.CA1813.severity = warning # Avoid unsealed attributes
dotnet_diagnostic.CA1814.severity = warning # Prefer jagged arrays over multidimensional
dotnet_diagnostic.CA1815.severity = warning # Override equals and operator equals on value types
dotnet_diagnostic.CA1816.severity = warning # Dispose methods should call SuppressFinalize
dotnet_diagnostic.CA1819.severity = warning # Properties should not return arrays
dotnet_diagnostic.CA1820.severity = silent # Test for empty strings using string length
dotnet_diagnostic.CA1821.severity = warning # Remove empty Finalizers
dotnet_diagnostic.CA1822.severity = warning # Mark members as static
dotnet_diagnostic.CA1823.severity = warning # Avoid unused private fields
dotnet_diagnostic.CA1824.severity = warning # Mark assemblies with NeutralResourcesLanguageAttribute
dotnet_diagnostic.CA1825.severity = warning # Avoid zero-length array allocations
dotnet_diagnostic.CA1826.severity = warning # Do not use Enumerable methods on indexable collections
dotnet_diagnostic.CA1827.severity = warning # Do not use Count() or LongCount() when Any() can be used
dotnet_diagnostic.CA1828.severity = warning # Do not use CountAsync() or LongCountAsync() when AnyAsync() can be used
dotnet_diagnostic.CA1829.severity = warning # Use Length/Count property instead of Count() when available
dotnet_diagnostic.CA1830.severity = warning # Prefer strongly-typed Append and Insert method overloads on StringBuilder
dotnet_diagnostic.CA1832.severity = warning # Use AsSpan or AsMemory instead of Range-based indexers when appropriate
dotnet_diagnostic.CA1833.severity = warning # Use AsSpan or AsMemory instead of Range-based indexers when appropriate
dotnet_diagnostic.CA1834.severity = warning # Consider using 'StringBuilder.Append(char)' when applicable
dotnet_diagnostic.CA1835.severity = warning # Prefer the 'Memory'-based overloads for 'ReadAsync' and 'WriteAsync'
dotnet_diagnostic.CA1836.severity = warning # Prefer IsEmpty over Count
dotnet_diagnostic.CA1837.severity = warning # Use 'Environment.ProcessId'
dotnet_diagnostic.CA1838.severity = warning # Avoid 'StringBuilder' parameters for P/Invokes
dotnet_diagnostic.CA1839.severity = warning # Use 'Environment.ProcessPath'
dotnet_diagnostic.CA1840.severity = warning # Use 'Environment.CurrentManagedThreadId'
dotnet_diagnostic.CA1841.severity = warning # Prefer Dictionary.Contains methods
dotnet_diagnostic.CA1842.severity = warning # Do not use 'WhenAll' with a single task
dotnet_diagnostic.CA1843.severity = warning # Do not use 'WaitAll' with a single task
dotnet_diagnostic.CA1844.severity = warning # Provide memory-based overrides of async methods when subclassing 'Stream'
dotnet_diagnostic.CA1845.severity = warning # Use span-based 'string.Concat'
dotnet_diagnostic.CA1846.severity = warning # Prefer 'AsSpan' over 'Substring'
dotnet_diagnostic.CA1847.severity = warning # Use char literal for a single character lookup
dotnet_diagnostic.CA1848.severity = silent # Use the LoggerMessage delegates
dotnet_diagnostic.CA1849.severity = warning # Call async methods when in an async method
dotnet_diagnostic.CA1850.severity = warning # Prefer static 'HashData' method over 'ComputeHash'
dotnet_diagnostic.CA1851.severity = warning # Possible multiple enumerations of 'IEnumerable' collection
dotnet_diagnostic.CA1852.severity = warning # Seal internal types
dotnet_diagnostic.CA1853.severity = warning # Unnecessary call to 'Dictionary.ContainsKey(key)'
dotnet_diagnostic.CA1854.severity = warning # Prefer the 'IDictionary.TryGetValue(TKey, out TValue)' method
dotnet_diagnostic.CA1855.severity = warning # Prefer 'Clear' over 'Fill'
dotnet_diagnostic.CA2000.severity = warning # Dispose objects before losing scope
dotnet_diagnostic.CA2002.severity = warning # Do not lock on objects with weak identity
dotnet_diagnostic.CA2007.severity = silent # Consider calling ConfigureAwait on the awaited task
dotnet_diagnostic.CA2008.severity = warning # Do not create tasks without passing a TaskScheduler
dotnet_diagnostic.CA2009.severity = warning # Do not call ToImmutableCollection on an ImmutableCollection value
dotnet_diagnostic.CA2011.severity = warning # Avoid infinite recursion
dotnet_diagnostic.CA2012.severity = warning # Use ValueTasks correctly
dotnet_diagnostic.CA2016.severity = warning # Forward the 'CancellationToken' parameter to methods
dotnet_diagnostic.CA2019.severity = warning # Improper 'ThreadStatic' field initialization
dotnet_diagnostic.CA2020.severity = warning # Prevent from behavioral change
dotnet_diagnostic.CA2100.severity = silent # Review SQL queries for security vulnerabilities
dotnet_diagnostic.CA2101.severity = warning # Specify marshaling for P/Invoke string arguments
dotnet_diagnostic.CA2109.severity = warning # Review visible event handlers
dotnet_diagnostic.CA2119.severity = warning # Seal methods that satisfy private interfaces
dotnet_diagnostic.CA2153.severity = warning # Do Not Catch Corrupted State Exceptions
dotnet_diagnostic.CA2201.severity = warning # Do not raise reserved exception types
dotnet_diagnostic.CA2207.severity = warning # Initialize value type static fields inline
dotnet_diagnostic.CA2208.severity = warning # Instantiate argument exceptions correctly
dotnet_diagnostic.CA2211.severity = warning # Non-constant fields should not be visible
dotnet_diagnostic.CA2213.severity = warning # Disposable fields should be disposed
dotnet_diagnostic.CA2214.severity = warning # Do not call overridable methods in constructors
dotnet_diagnostic.CA2215.severity = warning # Dispose methods should call base class dispose
dotnet_diagnostic.CA2216.severity = warning # Disposable types should declare finalizer
dotnet_diagnostic.CA2217.severity = warning # Do not mark enums with FlagsAttribute
dotnet_diagnostic.CA2218.severity = warning # Override GetHashCode on overriding Equals
dotnet_diagnostic.CA2219.severity = warning # Do not raise exceptions in finally clauses
dotnet_diagnostic.CA2224.severity = warning # Override Equals on overloading operator equals
dotnet_diagnostic.CA2225.severity = silent # Operator overloads have named alternates
dotnet_diagnostic.CA2226.severity = warning # Operators should have symmetrical overloads
dotnet_diagnostic.CA2227.severity = warning # Collection properties should be read only
dotnet_diagnostic.CA2229.severity = warning # Implement serialization constructors
dotnet_diagnostic.CA2231.severity = warning # Overload operator equals on overriding value type Equals
dotnet_diagnostic.CA2234.severity = silent # Pass system uri objects instead of strings
dotnet_diagnostic.CA2235.severity = warning # Mark all non-serializable fields
dotnet_diagnostic.CA2237.severity = warning # Mark ISerializable types with serializable
dotnet_diagnostic.CA2241.severity = warning # Provide correct arguments to formatting methods
dotnet_diagnostic.CA2242.severity = warning # Test for NaN correctly
dotnet_diagnostic.CA2243.severity = warning # Attribute string literals should parse correctly
dotnet_diagnostic.CA2244.severity = warning # Do not duplicate indexed element initializations
dotnet_diagnostic.CA2245.severity = warning # Do not assign a property to itself
dotnet_diagnostic.CA2246.severity = warning # Assigning symbol and its member in the same statement
dotnet_diagnostic.CA2248.severity = warning # Provide correct 'enum' argument to 'Enum.HasFlag'
dotnet_diagnostic.CA2249.severity = warning # Consider using 'string.Contains' instead of 'string.IndexOf'
dotnet_diagnostic.CA2250.severity = warning # Use 'ThrowIfCancellationRequested'
dotnet_diagnostic.CA2251.severity = warning # Use 'string.Equals'
dotnet_diagnostic.CA2252.severity = warning # This API requires opting into preview features
dotnet_diagnostic.CA2253.severity = warning # Named placeholders should not be numeric values
dotnet_diagnostic.CA2254.severity = warning # Template should be a static expression
dotnet_diagnostic.CA2300.severity = warning # Do not use insecure deserializer BinaryFormatter
dotnet_diagnostic.CA2301.severity = warning # Do not call BinaryFormatter.Deserialize without first setting BinaryFormatter.Binder
dotnet_diagnostic.CA2302.severity = warning # Ensure BinaryFormatter.Binder is set before calling BinaryFormatter.Deserialize
dotnet_diagnostic.CA2305.severity = warning # Do not use insecure deserializer LosFormatter
dotnet_diagnostic.CA2310.severity = warning # Do not use insecure deserializer NetDataContractSerializer
dotnet_diagnostic.CA2311.severity = warning # Do not deserialize without first setting NetDataContractSerializer.Binder
dotnet_diagnostic.CA2312.severity = warning # Ensure NetDataContractSerializer.Binder is set before deserializing
dotnet_diagnostic.CA2315.severity = warning # Do not use insecure deserializer ObjectStateFormatter
dotnet_diagnostic.CA2321.severity = warning # Do not deserialize with JavaScriptSerializer using a SimpleTypeResolver
dotnet_diagnostic.CA2322.severity = warning # Ensure JavaScriptSerializer is not initialized with SimpleTypeResolver before deserializing
dotnet_diagnostic.CA2326.severity = warning # Do not use TypeNameHandling values other than None
dotnet_diagnostic.CA2327.severity = warning # Do not use insecure JsonSerializerSettings
dotnet_diagnostic.CA2328.severity = warning # Ensure that JsonSerializerSettings are secure
dotnet_diagnostic.CA2329.severity = warning # Do not deserialize with JsonSerializer using an insecure configuration
dotnet_diagnostic.CA2330.severity = warning # Ensure that JsonSerializer has a secure configuration when deserializing
dotnet_diagnostic.CA2350.severity = warning # Do not use DataTable.ReadXml() with untrusted data
dotnet_diagnostic.CA2351.severity = warning # Do not use DataSet.ReadXml() with untrusted data
dotnet_diagnostic.CA2352.severity = warning # Unsafe DataSet or DataTable in serializable type can be vulnerable to remote code execution attacks
dotnet_diagnostic.CA2353.severity = warning # Unsafe DataSet or DataTable in serializable type
dotnet_diagnostic.CA2354.severity = warning # Unsafe DataSet or DataTable in deserialized object graph can be vulnerable to remote code execution attacks
dotnet_diagnostic.CA2355.severity = warning # Unsafe DataSet or DataTable type found in deserializable object graph
dotnet_diagnostic.CA2356.severity = warning # Unsafe DataSet or DataTable type in web deserializable object graph
dotnet_diagnostic.CA2361.severity = warning # Ensure auto-generated class containing DataSet.ReadXml() is not used with untrusted data
dotnet_diagnostic.CA2362.severity = warning # Unsafe DataSet or DataTable in auto-generated serializable type can be vulnerable to remote code execution attacks
dotnet_diagnostic.CA3001.severity = warning # Review code for SQL injection vulnerabilities
dotnet_diagnostic.CA3002.severity = warning # Review code for XSS vulnerabilities
dotnet_diagnostic.CA3003.severity = warning # Review code for file path injection vulnerabilities
dotnet_diagnostic.CA3004.severity = warning # Review code for information disclosure vulnerabilities
dotnet_diagnostic.CA3005.severity = warning # Review code for LDAP injection vulnerabilities
dotnet_diagnostic.CA3006.severity = warning # Review code for process command injection vulnerabilities
dotnet_diagnostic.CA3007.severity = warning # Review code for open redirect vulnerabilities
dotnet_diagnostic.CA3008.severity = warning # Review code for XPath injection vulnerabilities
dotnet_diagnostic.CA3009.severity = warning # Review code for XML injection vulnerabilities
dotnet_diagnostic.CA3010.severity = warning # Review code for XAML injection vulnerabilities
dotnet_diagnostic.CA3011.severity = warning # Review code for DLL injection vulnerabilities
dotnet_diagnostic.CA3012.severity = warning # Review code for regex injection vulnerabilities
dotnet_diagnostic.CA3061.severity = warning # Do Not Add Schema By URL
dotnet_diagnostic.CA3075.severity = warning # Insecure DTD processing in XML
dotnet_diagnostic.CA3076.severity = warning # Insecure XSLT script processing
dotnet_diagnostic.CA3077.severity = warning # Insecure Processing in API Design, XmlDocument and XmlTextReader
dotnet_diagnostic.CA3147.severity = warning # Mark Verb Handlers With Validate Antiforgery Token
dotnet_diagnostic.CA5350.severity = warning # Do Not Use Weak Cryptographic Algorithms
dotnet_diagnostic.CA5351.severity = warning # Do Not Use Broken Cryptographic Algorithms
dotnet_diagnostic.CA5358.severity = warning # Review cipher mode usage with cryptography experts
dotnet_diagnostic.CA5359.severity = warning # Do Not Disable Certificate Validation
dotnet_diagnostic.CA5360.severity = warning # Do Not Call Dangerous Methods In Deserialization
dotnet_diagnostic.CA5361.severity = warning # Do Not Disable SChannel Use of Strong Crypto
dotnet_diagnostic.CA5362.severity = warning # Potential reference cycle in deserialized object graph
dotnet_diagnostic.CA5363.severity = warning # Do Not Disable Request Validation
dotnet_diagnostic.CA5364.severity = warning # Do Not Use Deprecated Security Protocols
dotnet_diagnostic.CA5365.severity = warning # Do Not Disable HTTP Header Checking
dotnet_diagnostic.CA5366.severity = warning # Use XmlReader for 'DataSet.ReadXml()'
dotnet_diagnostic.CA5367.severity = warning # Do Not Serialize Types With Pointer Fields
dotnet_diagnostic.CA5368.severity = warning # Set ViewStateUserKey For Classes Derived From Page
dotnet_diagnostic.CA5369.severity = warning # Use XmlReader for 'XmlSerializer.Deserialize()'
dotnet_diagnostic.CA5370.severity = warning # Use XmlReader for XmlValidatingReader constructor
dotnet_diagnostic.CA5371.severity = warning # Use XmlReader for 'XmlSchema.Read()'
dotnet_diagnostic.CA5372.severity = warning # Use XmlReader for XPathDocument constructor
dotnet_diagnostic.CA5373.severity = warning # Do not use obsolete key derivation function
dotnet_diagnostic.CA5374.severity = warning # Do Not Use XslTransform
dotnet_diagnostic.CA5375.severity = warning # Do Not Use Account Shared Access Signature
dotnet_diagnostic.CA5376.severity = warning # Use SharedAccessProtocol HttpsOnly
dotnet_diagnostic.CA5377.severity = warning # Use Container Level Access Policy
dotnet_diagnostic.CA5378.severity = warning # Do not disable ServicePointManagerSecurityProtocols
dotnet_diagnostic.CA5379.severity = warning # Ensure Key Derivation Function algorithm is sufficiently strong
dotnet_diagnostic.CA5380.severity = warning # Do Not Add Certificates To Root Store
dotnet_diagnostic.CA5381.severity = warning # Ensure Certificates Are Not Added To Root Store
dotnet_diagnostic.CA5382.severity = warning # Use Secure Cookies In ASP.NET Core
dotnet_diagnostic.CA5383.severity = warning # Ensure Use Secure Cookies In ASP.NET Core
dotnet_diagnostic.CA5384.severity = warning # Do Not Use Digital Signature Algorithm (DSA)
dotnet_diagnostic.CA5385.severity = warning # Use Rivest-Shamir-Adleman (RSA) Algorithm With Sufficient Key Size
dotnet_diagnostic.CA5386.severity = warning # Avoid hardcoding SecurityProtocolType value
dotnet_diagnostic.CA5387.severity = warning # Do Not Use Weak Key Derivation Function With Insufficient Iteration Count
dotnet_diagnostic.CA5388.severity = warning # Ensure Sufficient Iteration Count When Using Weak Key Derivation Function
dotnet_diagnostic.CA5389.severity = warning # Do Not Add Archive Item's Path To The Target File System Path
dotnet_diagnostic.CA5390.severity = warning # Do not hard-code encryption key
dotnet_diagnostic.CA5391.severity = warning # Use antiforgery tokens in ASP.NET Core MVC controllers
dotnet_diagnostic.CA5392.severity = warning # Use DefaultDllImportSearchPaths attribute for P/Invokes
dotnet_diagnostic.CA5393.severity = warning # Do not use unsafe DllImportSearchPath value
dotnet_diagnostic.CA5394.severity = silent # Do not use insecure randomness
dotnet_diagnostic.CA5395.severity = warning # Miss HttpVerb attribute for action methods
dotnet_diagnostic.CA5396.severity = warning # Set HttpOnly to true for HttpCookie
dotnet_diagnostic.CA5397.severity = warning # Do not use deprecated SslProtocols values
dotnet_diagnostic.CA5398.severity = warning # Avoid hardcoded SslProtocols values
dotnet_diagnostic.CA5399.severity = warning # HttpClients should enable certificate revocation list checks
dotnet_diagnostic.CA5400.severity = warning # Ensure HttpClient certificate revocation list check is not disabled
dotnet_diagnostic.CA5401.severity = warning # Do not use CreateEncryptor with non-default IV
dotnet_diagnostic.CA5402.severity = warning # Use CreateEncryptor with the default IV
dotnet_diagnostic.CA5403.severity = warning # Do not hard-code certificate
dotnet_diagnostic.CA5404.severity = warning # Do not disable token validation checks
dotnet_diagnostic.CA5405.severity = warning # Do not always skip token validation in delegates
dotnet_diagnostic.CS0162.severity = silent # Unreachable code detected
dotnet_diagnostic.IDE0001.severity = warning # Simplify name
dotnet_diagnostic.IDE0002.severity = warning # Simplify member access
dotnet_diagnostic.IDE0003.severity = warning # Remove this or Me qualification
dotnet_diagnostic.IDE0004.severity = warning # Remove unnecessary cast
dotnet_diagnostic.IDE0005.severity = warning # Remove unnecessary using directives
dotnet_diagnostic.IDE0007.severity = warning # Use var instead of explicit type
dotnet_diagnostic.IDE0008.severity = warning # Use explicit type instead of var
dotnet_diagnostic.IDE0009.severity = warning # Add this or Me qualification
dotnet_diagnostic.IDE0010.severity = silent # Add missing cases to switch statement
dotnet_diagnostic.IDE0011.severity = warning # Add braces
dotnet_diagnostic.IDE0016.severity = warning # Use throw expression
dotnet_diagnostic.IDE0017.severity = warning # Use object initializers
dotnet_diagnostic.IDE0018.severity = warning # Inline variable declaration
dotnet_diagnostic.IDE0019.severity = warning # Use pattern matching to avoid 'as' followed by a 'null' check
dotnet_diagnostic.IDE0020.severity = warning # Use pattern matching to avoid 'is' check followed by a cast (with variable)
dotnet_diagnostic.IDE0021.severity = warning # Use expression body for constructors
dotnet_diagnostic.IDE0022.severity = warning # Use expression body for methods
dotnet_diagnostic.IDE0023.severity = warning # Use expression body for conversion operators
dotnet_diagnostic.IDE0024.severity = warning # Use expression body for operators
dotnet_diagnostic.IDE0025.severity = warning # Use expression body for properties
dotnet_diagnostic.IDE0026.severity = warning # Use expression body for indexers
dotnet_diagnostic.IDE0027.severity = warning # Use expression body for accessors
dotnet_diagnostic.IDE0028.severity = warning # Use collection initializers
dotnet_diagnostic.IDE0029.severity = warning # Use coalesce expression (non-nullable types)
dotnet_diagnostic.IDE0030.severity = warning # Use coalesce expression (nullable types)
dotnet_diagnostic.IDE0031.severity = warning # Use null propagation
dotnet_diagnostic.IDE0032.severity = silent # Use auto-implemented property
dotnet_diagnostic.IDE0033.severity = warning # Use explicitly provided tuple name
dotnet_diagnostic.IDE0034.severity = warning # Simplify 'default' expression
dotnet_diagnostic.IDE0035.severity = warning # Remove unreachable code
dotnet_diagnostic.IDE0036.severity = warning # Order modifiers
dotnet_diagnostic.IDE0037.severity = warning # Use inferred member names
dotnet_diagnostic.IDE0038.severity = warning # Use pattern matching to avoid 'is' check followed by a cast (without variable)
dotnet_diagnostic.IDE0039.severity = warning # Use local function instead of lambda
dotnet_diagnostic.IDE0040.severity = warning # Add accessibility modifiers
dotnet_diagnostic.IDE0041.severity = warning # Use 'is null' check
dotnet_diagnostic.IDE0042.severity = warning # Deconstruct variable declaration
dotnet_diagnostic.IDE0043.severity = warning # Invalid format string
dotnet_diagnostic.IDE0044.severity = warning # Add readonly modifier
dotnet_diagnostic.IDE0045.severity = warning # Use conditional expression for assignment
dotnet_diagnostic.IDE0046.severity = silent # Use conditional expression for return
dotnet_diagnostic.IDE0047.severity = silent # Remove unnecessary parentheses
dotnet_diagnostic.IDE0048.severity = silent # Add parentheses for clarity
dotnet_diagnostic.IDE0049.severity = warning # Use language keywords instead of framework type names for type references
dotnet_diagnostic.IDE0051.severity = warning # Remove unused private member
dotnet_diagnostic.IDE0052.severity = warning # Remove unread private members
dotnet_diagnostic.IDE0053.severity = warning # Use expression body for lambdas
dotnet_diagnostic.IDE0054.severity = warning # Use compound assignment
dotnet_diagnostic.IDE0055.severity = warning # Fix formatting
dotnet_diagnostic.IDE0056.severity = silent # Use index operator
dotnet_diagnostic.IDE0057.severity = warning # Use range operator
dotnet_diagnostic.IDE0058.severity = silent # Remove unnecessary expression value
dotnet_diagnostic.IDE0059.severity = warning # Remove unnecessary value assignment
dotnet_diagnostic.IDE0060.severity = silent # Remove unused parameter
dotnet_diagnostic.IDE0061.severity = warning # Use expression body for local functions
dotnet_diagnostic.IDE0062.severity = warning # Make local function static
dotnet_diagnostic.IDE0063.severity = warning # Use simple 'using' statement
dotnet_diagnostic.IDE0064.severity = warning # Make readonly fields writable
dotnet_diagnostic.IDE0065.severity = warning # 'using' directive placement
dotnet_diagnostic.IDE0066.severity = silent # Use switch expression
dotnet_diagnostic.IDE0070.severity = warning # Use 'System.HashCode.Combine'
dotnet_diagnostic.IDE0071.severity = warning # Simplify interpolation
dotnet_diagnostic.IDE0072.severity = silent # Add missing cases to switch expression
dotnet_diagnostic.IDE0073.severity = warning # Require file header
dotnet_diagnostic.IDE0074.severity = silent # Use coalesce compound assignment
dotnet_diagnostic.IDE0075.severity = warning # Simplify conditional expression
dotnet_diagnostic.IDE0076.severity = warning # Remove invalid global 'SuppressMessageAttribute'
dotnet_diagnostic.IDE0077.severity = warning # Avoid legacy format target in global 'SuppressMessageAttribute'
dotnet_diagnostic.IDE0078.severity = warning # Use pattern matching
dotnet_diagnostic.IDE0079.severity = warning # Remove unnecessary suppression
dotnet_diagnostic.IDE0080.severity = warning # Remove unnecessary suppression operator
dotnet_diagnostic.IDE0082.severity = warning # Convert typeof to nameof
dotnet_diagnostic.IDE0083.severity = warning # Use pattern matching (not operator)
dotnet_diagnostic.IDE0090.severity = warning # Simplify new expression
dotnet_diagnostic.IDE0100.severity = warning # Remove unnecessary equality operator
dotnet_diagnostic.IDE0110.severity = warning # Remove unnecessary discard
dotnet_diagnostic.IDE0120.severity = warning # Simplify LINQ expression
dotnet_diagnostic.IDE0130.severity = warning # Namespace does not match folder structure
dotnet_diagnostic.IDE0150.severity = warning # Prefer 'null' check over type check
dotnet_diagnostic.IDE0160.severity = warning # Use block-scoped namespace
dotnet_diagnostic.IDE0161.severity = warning # Use file-scoped namespace
dotnet_diagnostic.IDE0170.severity = warning # Simplify property pattern
dotnet_diagnostic.IDE0180.severity = warning # Use tuple to swap values
dotnet_diagnostic.IDE0200.severity = warning # Remove unnecessary lambda expression
dotnet_diagnostic.IDE0210.severity = warning # Convert to top-level statements
dotnet_diagnostic.IDE0211.severity = warning # Convert to 'Program.Main' style program
dotnet_diagnostic.IDE0220.severity = warning # Add explicit cast
dotnet_diagnostic.IDE0230.severity = warning # Use UTF-8 string literal
dotnet_diagnostic.IDE0240.severity = warning # Remove redundant nullable directive
dotnet_diagnostic.IDE0241.severity = warning # Remove unnecessary nullable directive
dotnet_diagnostic.IDE0250.severity = warning # Make struct 'readonly'
dotnet_diagnostic.IDE1005.severity = warning # Use conditional delegate call
dotnet_diagnostic.IDE1006.severity = warning # Naming rule violation
dotnet_diagnostic.IDE2000.severity = warning # Avoid multiple blank lines
dotnet_diagnostic.IDE2001.severity = warning # Embedded statements must be on their own line
dotnet_diagnostic.IDE2002.severity = warning # Consecutive braces must not have blank line between them
dotnet_diagnostic.IDE2003.severity = warning # Blank line required between block and subsequent statement
dotnet_diagnostic.IDE2004.severity = warning # Blank line not allowed after constructor initializer colon
dotnet_diagnostic.RE0001.severity = warning
dotnet_diagnostic.SYSLIB1045.severity = silent
dotnet_remove_unnecessary_suppression_exclusions = all # related: IDE0079
dotnet_separate_import_directive_groups = false # related: IDE0055
dotnet_sort_system_directives_first = false # related: IDE0055
dotnet_style_allow_multiple_blank_lines_experimental = false # related: IDE2000
dotnet_style_allow_statement_immediately_after_block_experimental = true # related: IDE2003
dotnet_style_coalesce_expression = true # related: IDE0029, IDE0030
dotnet_style_collection_initializer = true # related: IDE0028
dotnet_style_explicit_tuple_names = true # related: IDE0033
dotnet_style_namespace_match_folder = true # related: IDE0055
dotnet_style_null_propagation = true # related: IDE0031
dotnet_style_object_initializer = true # related: IDE0017
dotnet_style_parentheses_in_arithmetic_binary_operators = never_if_unnecessary # related: IDE0047, IDE0048
dotnet_style_parentheses_in_other_binary_operators = never_if_unnecessary # related: IDE0047, IDE0048
dotnet_style_parentheses_in_other_operators = never_if_unnecessary # related: IDE0047, IDE0048
dotnet_style_parentheses_in_relational_binary_operators = always_for_clarity # related: IDE0047, IDE0048
dotnet_style_predefined_type_for_locals_parameters_members = true # related: IDE0049
dotnet_style_predefined_type_for_member_access = true # related: IDE0049
dotnet_style_prefer_auto_properties = true # related: IDE0032
dotnet_style_prefer_compound_assignment = true # related: IDE0054, IDE0074
dotnet_style_prefer_conditional_expression_over_assignment = true # related: IDE0045
dotnet_style_prefer_conditional_expression_over_return = true # related: IDE0046
dotnet_style_prefer_inferred_anonymous_type_member_names = false # related: IDE0037
dotnet_style_prefer_inferred_tuple_names = false # related: IDE0037
dotnet_style_prefer_is_null_check_over_reference_equality_method = true # related: IDE0041
dotnet_style_prefer_simplified_boolean_expressions = true # related: IDE0075
dotnet_style_prefer_simplified_interpolation = true # related: IDE0071
dotnet_style_qualification_for_event = false # related: IDE0003, IDE0009
dotnet_style_qualification_for_field = false # related: IDE0003, IDE0009
dotnet_style_qualification_for_method = false # related: IDE0003, IDE0009
dotnet_style_qualification_for_property = false # related: IDE0003, IDE0009
dotnet_style_readonly_field = true # related: IDE0044
dotnet_style_require_accessibility_modifiers = omit_if_default # related: IDE0040
file_header_template = unset # related: IDE0073

# related: IDE1006
# - https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/naming-rules
# styles:
dotnet_naming_style.camel_case_style.capitalization = camel_case
dotnet_naming_style.generic_parameter_style.capitalization = pascal_case
dotnet_naming_style.generic_parameter_style.required_prefix = T
dotnet_naming_style.interface_style.capitalization = pascal_case
dotnet_naming_style.interface_style.required_prefix = I
dotnet_naming_style.pascal_case_style.capitalization = pascal_case
# default:
dotnet_naming_rule.default_rule.severity = warning
dotnet_naming_rule.default_rule.style = pascal_case_style
dotnet_naming_rule.default_rule.symbols = default_symbols
dotnet_naming_symbols.default_symbols.applicable_accessibilities = *
dotnet_naming_symbols.default_symbols.applicable_kinds = *
# generic parameter:
dotnet_naming_rule.generic_parameter_rule.severity = warning
dotnet_naming_rule.generic_parameter_rule.style = generic_parameter_style
dotnet_naming_rule.generic_parameter_rule.symbols = generic_parameter_symbols
dotnet_naming_symbols.generic_parameter_symbols.applicable_accessibilities = *
dotnet_naming_symbols.generic_parameter_symbols.applicable_kinds = type_parameter
# interface:
dotnet_naming_rule.interface_rule.severity = warning
dotnet_naming_rule.interface_rule.style = interface_style
dotnet_naming_rule.interface_rule.symbols = interface_symbols
dotnet_naming_symbols.interface_symbols.applicable_accessibilities = *
dotnet_naming_symbols.interface_symbols.applicable_kinds = interface
# local:
dotnet_naming_rule.local_rule.severity = warning
dotnet_naming_rule.local_rule.style = camel_case_style
dotnet_naming_rule.local_rule.symbols = local_symbols
dotnet_naming_symbols.local_symbols.applicable_accessibilities = *
dotnet_naming_symbols.local_symbols.applicable_kinds = local,parameter
# private member:
dotnet_naming_rule.private_member_rule.severity = warning
dotnet_naming_rule.private_member_rule.style = camel_case_style
dotnet_naming_rule.private_member_rule.symbols = private_member_symbols
dotnet_naming_symbols.private_member_symbols.applicable_accessibilities = internal,private,protected,protected_internal,private_protected
dotnet_naming_symbols.private_member_symbols.applicable_kinds = field
